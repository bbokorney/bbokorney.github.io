{"version":3,"sources":["components/AddTransactionForm/AddTransactionForm.js","components/ConfigInfoForm/ConfigInfoForm.js","components/App/App.js","serviceWorker.js","index.js"],"names":["AddTransactionForm","props","handleAmountChange","event","maskedValue","floatValue","setState","amount","floatAmount","handleDateChange","date","handleCategoryChange","category","handleTagsChange","tags","handleVendorChange","vendor","target","value","handleSubmit","preventDefault","addTransaction","currentComponent","addingTransaction","transactionAdded","error","window","gapi","client","load","sheets","spreadsheets","values","append","spreadsheetId","range","valueInputOption","resource","formatTransactionRow","then","response","console","log","Date","catch","JSON","stringify","state","map","t","innerValues","getFormattedDate","concat","transformCategories","categories","sort","x","y","count","c","label","name","year","getFullYear","getMonth","toString","padStart","getDate","componentDidMount_super","CurrencyInput","prototype","componentDidMount","this","autoFocus","call","arguments","setSelectionRange_super","theInput","setSelectionRange","componentDidUpdate_super","componentDidUpdate","disableSubmit","onSubmit","className","calendarClassName","selected","onChange","onFocus","e","readOnly","disabled","customInput","inputType","onChangeEvent","prefix","allowEmpty","classNamePrefix","options","isSearchable","type","isMulti","Component","DatePickerContainer","onClick","LoginButton","LogoutButton","ConfigInfoForm","handleUpdate","obj","id","config","clientId","apiKey","sheetId","button","text","isLoggedIn","handleLogoutClick","handleLoginClick","clearConfig","version","Transactions","listItems","transactions","i","key","App","setupAPIClient","prevConfig","allConfigSet","configChanged","initClient","handleConfigInfoSubmit","localStorage","setItem","removeItem","sheeetId","currConfig","auth2","getAuthInstance","signIn","signOut","init","discoveryDocs","scope","isSignedIn","listen","updateSigninStatus","get","loadCategories","handleError","errMsg","errorMessage","loadTransactions","transformTransactionResults","result","slice","length","v","loadFromConfigWithDefault","defaultValue","fromStorage","getItem","path","to","prevProps","prevState","snapshot","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","process","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e54ac440.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './AddTransactionForm.css';\nimport CurrencyInput from 'react-currency-input';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from 'react-select'\nimport CreatableSelect from 'react-select/creatable';\n\nclass AddTransactionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      amount: \"\",\n      floatAmount: 0,\n      category: null,\n      vendor: \"\",\n      addingTransaction: false,\n      transactionAdded: false,\n      error: \"\",\n    };\n  }\n\n  handleAmountChange = (event, maskedValue, floatValue) => {\n    this.setState({amount: maskedValue, floatAmount: floatValue});\n  }\n\n  handleDateChange = (date) => {\n    this.setState({ date: date });\n  };\n\n  handleCategoryChange = (category) => {\n    this.setState({ category: category });\n  };\n\n  handleTagsChange = (tags) => {\n    this.setState({ tags: tags });\n  };\n\n  handleVendorChange = (event) => {\n    this.setState({ vendor: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.addTransaction();\n  }\n\n  getFormattedDate(date) {\n    let year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString().padStart(2, '0');\n    let day = date.getDate().toString().padStart(2, '0');\n  \n    return month + '/' + day + '/' + year;\n  }\n\n  addTransaction = () => {\n    const currentComponent = this;\n\n    currentComponent.setState({\n      addingTransaction: true,\n      transactionAdded: false,\n      error: \"\",\n    });\n\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n      window.gapi.client.sheets.spreadsheets.values.append({\n        spreadsheetId :'1H89VCjaXRq5d4XT8J92N7eavaBIvIGSfP240VOMasRo',\n        range: 'Transactions',\n        valueInputOption: 'USER_ENTERED',\n        resource: currentComponent.formatTransactionRow(),\n      })\n      .then(response => {\n        console.log(response);\n        currentComponent.setState({\n          addingTransaction: false,\n          transactionAdded: true,\n          date: new Date(),\n          amount: \"\",\n          floatAmount: 0,\n          category: \"\",\n          vendor: \"\",\n          error: \"\",\n          tags: [],\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        currentComponent.setState({\n          addingTransaction: false,\n          transactionAdded: false,\n          error: JSON.stringify(error, null, 2),\n        });\n      });\n    });\n  }\n\n  formatTransactionRow = () => {\n    const tags = this.state.tags.map((t) => t.value);\n    var innerValues = [this.getFormattedDate(this.state.date), this.state.amount, this.state.category.value, this.state.vendor];\n    innerValues = innerValues.concat(tags);\n    return {\n      values: [innerValues],\n    };\n  }\n\n  transformCategories = (categories) => {\n    return categories\n      .sort((x, y) => {\n        return y.count - x.count;\n      })\n      .map((c) => {\n        return {\n          label: c.name,\n          value: c.name,\n        };\n    });\n  }\n\n  render() {\n    // Fix autofocus issues with CurrencyInput\n    // on iOS it will still auto focus even if autoFocus=false\n    // see https://github.com/jsillitoe/react-currency-input/issues/90\n    let componentDidMount_super = CurrencyInput.prototype.componentDidMount;\n    CurrencyInput.prototype.componentDidMount = function() {\n        if(!this.props.autoFocus) {\n            let setSelectionRange_super = this.theInput.setSelectionRange;\n            this.theInput.setSelectionRange = () => {};\n            componentDidMount_super.call(this, ...arguments);\n            this.theInput.setSelectionRange = setSelectionRange_super;\n        }\n        else {\n            componentDidMount_super.call(this, ...arguments);\n        }\n    };\n    let componentDidUpdate_super = CurrencyInput.prototype.componentDidUpdate;\n    CurrencyInput.prototype.componentDidUpdate = function() {\n        if(!this.props.autoFocus) {\n            let setSelectionRange_super = this.theInput.setSelectionRange;\n            this.theInput.setSelectionRange = () => {};\n            componentDidUpdate_super.call(this, ...arguments);\n            this.theInput.setSelectionRange = setSelectionRange_super;\n        }\n        else {\n            componentDidMount_super.call(this, ...arguments);\n        }\n    };\n    const disableSubmit = this.state.addingTransaction;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className=\"AddTransactionForm-container\">\n          <label className=\"AddTransactionForm-label\">Date:</label>\n          <DatePicker\n            className=\"AddTransactionForm-datepicker\"\n            calendarClassName=\"AddTransactionForm-datepicker-container\"\n            selected={this.state.date}\n            onChange={this.handleDateChange}\n            onFocus={(e) => e.target.readOnly = true}\n            disabled={disableSubmit}\n            customInput={<DatePickerContainer disabled={disableSubmit} />}\n          />\n\n          <label className=\"AddTransactionForm-label\">Amount:</label>\n          <CurrencyInput\n            inputType=\"tel\"\n            className=\"AddTransactionForm-input\"\n            value={this.state.amount}\n            onChangeEvent={this.handleAmountChange}\n            prefix=\"$\"\n            allowEmpty={true}\n            disabled={disableSubmit}\n            autoFocus={false}\n            onFocus={(e) => e.target.value = \"\"}\n          />\n\n          <label className=\"AddTransactionForm-label\">Category:</label>\n          <Select\n            className=\"AddTransactionForm-input AddTransactionForm-category\"\n            classNamePrefix=\"Categories\"\n            options={this.transformCategories(this.props.categories)}\n            onChange={this.handleCategoryChange}\n            isSearchable={false}\n            disabled={disableSubmit}\n            value={this.state.category}\n          />\n\n          <label className=\"AddTransactionForm-label\">Vendor:</label>\n          <input\n            className=\"AddTransactionForm-input\"\n            type=\"text\"\n            value={this.state.vendor}\n            onChange={this.handleVendorChange}\n            disabled={disableSubmit}\n          />\n\n          <label className=\"AddTransactionForm-label\">Tags:</label>\n          <CreatableSelect\n            className=\"AddTransactionForm-input AddTransactionForm-category\"\n            classNamePrefix=\"Categories\"\n            value={this.state.tags}\n            isMulti={true}\n            onChange={this.handleTagsChange}\n            isSearchable={true}\n            disabled={disableSubmit}\n          />\n\n          <input className=\"AddTransactionForm-input\" type=\"submit\" value=\"Add Transaction\" disabled={disableSubmit} />\n\n        </form>\n        {this.state.addingTransaction && <p>Adding transaction...</p>}\n        {this.state.transactionAdded && <p>Transaction added!</p>}\n        {this.state.error && <p>{this.state.error}</p>}\n      </div>\n    )\n  }\n}\n\nclass DatePickerContainer extends Component {\n  render() {\n    return (\n      <div className=\"AddTransactionForm-datepicker-container\">\n        <input value={this.props.value} onChange={this.props.onChange}\n          onClick={this.props.onClick}\n          type=\"text\"\n          className=\"AddTransactionForm-datepicker\"\n          readOnly={true}\n          disabled={this.props.disabled}\n        />\n      </div>\n    );\n  }\n}\nexport default AddTransactionForm;\n","import React, { Component } from 'react';\nimport '../AddTransactionForm/AddTransactionForm.css';\n\nclass ConfigInfoForm extends Component {\n  constructor(props) {\n    super(props);\n    const config = this.props.config;\n    this.state = {\n      clientId: config.clientId ? config.clientId : \"\",\n      apiKey: config.apiKey,\n      sheetId: config.sheetId,\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n  }\n\n  handleUpdate = (event) => {\n    const id = event.target.id;\n    var obj = {};\n    obj[id] = event.target.value; \n    this.setState(obj);\n  }\n\n  render() {\n    const config = this.state;\n\n    const isLoggedIn = this.props.isLoggedIn;\n    let button;\n    let text;\n\n    if (isLoggedIn) {\n      button = <LogoutButton onClick={this.props.handleLogoutClick} />;\n      text = \"You're logged in\"\n    } else {\n      button = <LoginButton onClick={this.props.handleLoginClick} />;\n      text = \"You need to log in\"\n    }\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className=\"AddTransactionForm-container\">\n          <label className=\"AddTransactionForm-label\">Client ID:</label>\n          <input className=\"AddTransactionForm-input\" id=\"clientId\" type=\"text\" value={config.clientId} onChange={this.handleUpdate} />\n\n          <label className=\"AddTransactionForm-label\">API Key:</label>\n          <input className=\"AddTransactionForm-input\" id=\"apiKey\" type=\"text\" value={config.apiKey} onChange={this.handleUpdate} />\n\n          <label className=\"AddTransactionForm-label\">Sheet ID:</label>\n          <input className=\"AddTransactionForm-input\" id=\"sheetId\" type=\"text\" value={config.sheetId} onChange={this.handleUpdate} />\n\n          <input className=\"AddTransactionForm-input\" type=\"submit\" value=\"Update Configuration\" />\n        </form>\n        <button onClick={this.props.clearConfig}>Clear config</button>\n\n        <p>{text}</p>\n        {button}\n        <p>App version {this.props.version}</p>\n      </div>\n    );\n  }\n}\n\nfunction LoginButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Login\n    </button>\n  );\n}\n\nfunction LogoutButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Logout\n    </button>\n  );\n}\n\nexport default ConfigInfoForm;\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport './App.css';\nimport AddTransactionForm from '../AddTransactionForm/AddTransactionForm.js';\nimport ConfigInfoForm from '../ConfigInfoForm/ConfigInfoForm.js';\nimport { FaHome, FaPlus, FaCog, FaList } from 'react-icons/fa';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessage: \"\",\n      isLoggedIn: false,\n      transactions: [],\n      categories: [],\n      config: {\n        clientId: this.loadFromConfigWithDefault('clientId', \"\"),\n        apiKey: this.loadFromConfigWithDefault('apiKey', \"\"),\n        sheetId: this.loadFromConfigWithDefault('sheetId', \"\"),\n      },\n    };\n  }\n\n  loadFromConfigWithDefault(key, defaultValue) {\n    const fromStorage = localStorage.getItem(key);\n    return fromStorage ? fromStorage : defaultValue;\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <h2 className=\"App-header-text\">Budget</h2>\n          </div>\n\n          <div className=\"App-main\">\n            <Switch>\n              <Route path=\"/add\">\n                <AddTransactionForm categories={this.state.categories} />\n              </Route>\n              <Route path=\"/list\">\n                <Transactions transactions={this.state.transactions} />\n              </Route>\n              <Route path=\"/settings\">\n                <ConfigInfoForm\n                  clearConfig={this.clearConfig}\n                  onSubmit={this.handleConfigInfoSubmit}\n                  config={this.state.config}\n                  isLoggedIn={this.state.isLoggedIn}\n                  handleLoginClick={this.handleLoginClick}\n                  handleLogoutClick={this.handleLogoutClick}\n                  version={this.props.version}\n                />\n              </Route>\n              <Route path=\"/\">\n                <h1>Home</h1>\n              </Route>\n            </Switch>\n            <div>\n              { this.state.errorMessage && <label>Error: {this.state.errorMessage}</label> }\n            </div>\n          </div>\n\n          <nav className=\"App-navbar\">\n            <div className=\"App-navbar-home App-navbar-item\">\n              <Link className=\"App-navbar-link\" to=\"/\"><FaHome className=\"App-navbar-icon\" /></Link>\n            </div>\n            <div className=\"App-navbar-add App-navbar-item\">\n              <Link className=\"App-navbar-link\" to=\"/add\"><FaPlus className=\"App-navbar-icon\" /></Link>\n            </div>\n            <div className=\"App-navbar-list App-navbar-item\">\n              <Link className=\"App-navbar-link\" to=\"/list\"><FaList className=\"App-navbar-icon\" /></Link>\n            </div>\n            <div className=\"App-navbar-settings App-navbar-item\">\n              <Link className=\"App-navbar-link\" to=\"/settings\"><FaCog className=\"App-navbar-icon\" /></Link>\n            </div>\n          </nav>\n        </div>\n      </Router>\n    );\n  }\n\n  componentDidMount(){\n    this.setupAPIClient(null);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.setupAPIClient(prevState.config);\n  }\n\n  setupAPIClient = (prevConfig) => {\n    if(!this.allConfigSet(this.state.config)) {\n      return;\n    }\n\n    if(!this.configChanged(prevConfig, this.state.config)) {\n      return;\n    }\n\n    window.gapi.load('client:auth2', this.initClient);\n  }\n\n  handleConfigInfoSubmit = (config) => {\n    localStorage.setItem('clientId', config.clientId);\n    localStorage.setItem('apiKey', config.apiKey);\n    localStorage.setItem('sheetId', config.sheetId);\n    this.setState({config: config});\n  }\n\n  clearConfig = () => {\n    localStorage.removeItem('clientId');\n    localStorage.removeItem('apiKey');\n    localStorage.removeItem('sheetId');\n    this.setState({\n      config: {\n        clientId: \"\",\n        apiKey: \"\",\n        sheetId: \"\",\n      },\n    });\n  }\n\n  allConfigSet = (config) => {\n    return config.clientId && config.apiKey && config.sheetId && config.clientId !== \"null\" && config.apiKey !== \"null\" && config.sheeetId !== \"null\" && config.clientId !== \"undefined\" && config.apiKey !== \"undefined\" && config.sheeetId !== \"undefined\";\n  }\n\n  configChanged = (prevConfig, currConfig) => {\n    if(!prevConfig && currConfig) {\n      return true\n    }\n    if(prevConfig && !currConfig) {\n      return true\n    }\n    return prevConfig.clientId !== currConfig.clientId\n      || prevConfig.apiKey !== currConfig.apiKey\n      || prevConfig.sheetId !== currConfig.sheetId;\n  }\n\n  handleLoginClick = () => {\n    window.gapi.auth2.getAuthInstance().signIn();\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick = () => {\n    window.gapi.auth2.getAuthInstance().signOut();\n    this.setState({isLoggedIn: false});\n  }\n\n  initClient = () => {\n    // Client ID and API key from the Developer Console\n    const config = this.state.config;\n\n    // Array of API discovery doc URLs for APIs used by the quickstart\n    var DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\n\n    // Authorization scopes required by the API; multiple scopes can be\n    // included, separated by spaces.\n    var SCOPES = \"https://www.googleapis.com/auth/spreadsheets\";\n\n    let currentComponent = this;\n\n    window.gapi.client.init({\n      apiKey: config.apiKey,\n      clientId: config.clientId,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function () {\n      // Listen for sign-in state changes.\n      window.gapi.auth2.getAuthInstance().isSignedIn.listen(currentComponent.updateSigninStatus);\n\n      // Handle the initial sign-in state.\n      currentComponent.updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n      // currentComponent.loadTransactions();\n      currentComponent.loadCategories();\n    }, function(error) {\n      currentComponent.handleError(error);\n    });\n  }\n\n  handleError = (error) => {\n    console.log(error);\n    const errMsg = JSON.stringify(error, null, 2)\n    this.setState({\n      errorMessage: errMsg, \n    });\n  }\n\n  updateSigninStatus = (isSignedIn) => {\n    if (isSignedIn) {\n      this.setState({\n        isLoggedIn: true,\n      });\n    } else {\n      this.setState({\n        isLoggedIn: false,\n      });\n    }\n  }\n\n  loadTransactions = () => {\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n      window.gapi.client.sheets.spreadsheets.values.get({\n        spreadsheetId: this.state.config.sheetId,\n        range: 'Transactions',\n      })\n      .then(response => {\n        this.setState({transactions: this.transformTransactionResults(response)});\n      })\n      .catch(error => {\n        this.handleError(error);\n      });\n    });\n  }\n\n  transformTransactionResults = (response) => {\n    const values = response.result.values;\n    return values.slice(0, values.length).map((v) => {\n      return {\n        date: v[0],\n        amount: v[1],\n        category: v[2],\n        vendor: v[3],\n      };\n    });\n  }\n\n  loadCategories = () => {\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n      window.gapi.client.sheets.spreadsheets.values.get({\n        spreadsheetId: this.state.config.sheetId,\n        range: 'Categories!A1:B',\n      })\n      .then(response => {\n        const values = response.result.values;\n        const categories = values.map((v) => {\n          return {\n            name: v[0],\n            count: v[1],\n          };\n        });\n        this.setState({categories: categories});\n      })\n      .catch(error => {\n        this.handleError(error);\n      });\n    });\n  }\n}\n\nfunction Transactions(props) {\n  const listItems = props.transactions.map((t, i) =>\n    <li key={i} className=\"Transactions-list\">\n      <b className=\"Transactions-list-item Transactions-list-amount\">{t.amount}</b>\n      <span className=\"Transactions-list-item Transactions-list-date\">{t.date}</span>\n      <span className=\"Transactions-list-item Transactions-list-category\">{t.category}</span>\n      <span className=\"Transactions-list-item Transactions-list-vendor\">{t.vendor ? t.vendor : \"No vendor\"}</span>\n    </li>\n  );\n\n  return (\n    <ul className=\"Transactions-container\">{listItems}</ul>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nconst version = process.env.REACT_APP_VERSION ? process.env.REACT_APP_VERSION : 'not set';\nReactDOM.render(<App version={version} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}