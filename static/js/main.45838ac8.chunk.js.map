{"version":3,"sources":["AddTransactionForm.js","ConfigInfoForm.js","App.js","serviceWorker.js","index.js"],"names":["AddTransactionForm","props","handleAmountChange","event","maskedValue","floatValue","setState","amount","floatAmount","handleDateChange","date","handleCategoryChange","category","value","handleVendorChange","vendor","target","handleSubmit","preventDefault","addTransaction","window","gapi","client","load","sheets","spreadsheets","values","append","spreadsheetId","range","valueInputOption","resource","formatTransactionRow","then","response","console","log","catch","error","getFormattedDate","state","Date","categories","label","year","getFullYear","getMonth","toString","padStart","getDate","onSubmit","this","className","selected","onChange","onFocus","e","readOnly","inputType","onChangeEvent","prefix","allowEmpty","classNamePrefix","options","isSearchable","type","Component","ConfigInfoForm","handleUpdate","obj","id","config","clientId","apiKey","sheetId","Transactions","listItems","transactions","map","t","concat","LoginButton","onClick","LogoutButton","UserGreeting","GuestGreeting","Greeting","isLoggedIn","App","setupAPIClient","prevConfig","allConfigSet","configChanged","initClient","handleConfigInfoSubmit","localStorage","setItem","clearConfig","removeItem","sheeetId","currConfig","handleLoginClick","auth2","getAuthInstance","signIn","handleLogoutClick","signOut","currentComponent","init","discoveryDocs","scope","isSignedIn","listen","updateSigninStatus","get","handleError","errMsg","JSON","stringify","errorMessage","loadTransactions","transformResults","result","slice","length","v","loadFromConfigWithDefault","key","defaultValue","fromStorage","getItem","button","configSet","prevProps","prevState","snapshot","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.45838ac8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './AddTransactionForm.css';\nimport CurrencyInput from 'react-currency-input';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from 'react-select'\n\nclass AddTransactionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      amount: \"\",\n      floatAmount: 0,\n      category: \"\",\n      vendor: \"\",\n    };\n\n    this.categories = [\n      { value: 'Grocery', label: 'Grocery' },\n      { value: 'Restaurant', label: 'Restaurant' },\n      { value: 'To go food', label: 'To go food' },\n      { value: 'Gas', label: 'Gas' },\n      { value: 'Auto insurance', label: 'Auto insurance' },\n      { value: 'Rent', label: 'Rent' },\n    ];\n  }\n\n  handleAmountChange = (event, maskedValue, floatValue) => {\n    this.setState({amount: maskedValue, floatAmount: floatValue});\n  }\n\n  handleDateChange = (date) => {\n    this.setState({ date: date });\n  };\n\n  handleCategoryChange = (category) => {\n    this.setState({ category: category.value });\n  };\n\n  handleVendorChange = (event) => {\n    this.setState({ vendor: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.addTransaction();\n  }\n\n  getFormattedDate(date) {\n    let year = date.getFullYear();\n    let month = (1 + date.getMonth()).toString().padStart(2, '0');\n    let day = date.getDate().toString().padStart(2, '0');\n  \n    return month + '/' + day + '/' + year;\n  }\n\n  addTransaction = () => {\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n      window.gapi.client.sheets.spreadsheets.values.append({\n        spreadsheetId :'1H89VCjaXRq5d4XT8J92N7eavaBIvIGSfP240VOMasRo',\n        range: 'Transactions',\n        valueInputOption: 'USER_ENTERED',\n        resource: this.formatTransactionRow(),\n      })\n      .then(response => {\n        console.log(response);\n        // this.setState\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  formatTransactionRow = () => {\n    return {\n      values: [[this.getFormattedDate(this.state.date), this.state.amount, this.state.category, this.state.vendor]],\n    };\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"AddTransactionForm-container\">\n        <label className=\"AddTransactionForm-label\">Date:</label>\n        <DatePicker\n          className=\"AddTransactionForm-input\"\n          selected={this.state.date}\n          onChange={this.handleDateChange}\n          onFocus={(e) => e.target.readOnly = true}\n        />\n\n        <label className=\"AddTransactionForm-label\">Amount:</label>\n        <CurrencyInput inputType=\"tel\" className=\"AddTransactionForm-input\" value={this.state.amount} onChangeEvent={this.handleAmountChange} prefix=\"$\" allowEmpty={true} />\n\n        <label className=\"AddTransactionForm-label\">Category:</label>\n        <Select className=\"AddTransactionForm-input\" classNamePrefix=\"Categories\" options={this.categories} onChange={this.handleCategoryChange} isSearchable={false} />\n\n        <label className=\"AddTransactionForm-label\">Vendor:</label>\n        <input className=\"AddTransactionForm-input\" type=\"text\" value={this.state.vendor} onChange={this.handleVendorChange} />\n\n        <input className=\"AddTransactionForm-input\" type=\"submit\" value=\"Add Transaction\" />\n      </form>\n    )\n  }\n}\nexport default AddTransactionForm;\n","import React, { Component } from 'react';\nimport './AddTransactionForm.css';\n\nclass ConfigInfoForm extends Component {\n  constructor(props) {\n    super(props);\n    const config = this.props.config;\n    console.log(config);\n    this.state = {\n      clientId: config.clientId ? config.clientId : \"\",\n      apiKey: config.apiKey,\n      sheetId: config.sheetId,\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n  }\n\n  handleUpdate = (event) => {\n    const id = event.target.id;\n    var obj = {};\n    obj[id] = event.target.value; \n    this.setState(obj);\n  }\n\n  render() {\n    const config = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className=\"AddTransactionForm-container\">\n        <label className=\"AddTransactionForm-label\">Client ID:</label>\n        <input className=\"AddTransactionForm-input\" id=\"clientId\" type=\"text\" value={config.clientId} onChange={this.handleUpdate} />\n\n        <label className=\"AddTransactionForm-label\">API Key:</label>\n        <input className=\"AddTransactionForm-input\" id=\"apiKey\" type=\"text\" value={config.apiKey} onChange={this.handleUpdate} />\n\n        <label className=\"AddTransactionForm-label\">Sheet ID:</label>\n        <input className=\"AddTransactionForm-input\" id=\"sheetId\" type=\"text\" value={config.sheetId} onChange={this.handleUpdate} />\n\n        <input className=\"AddTransactionForm-input\" type=\"submit\" value=\"Update Configuration\" />\n      </form>\n    );\n  }\n}\n\n\nexport default ConfigInfoForm;\n","import React, { Component } from 'react';\nimport './App.css';\nimport AddTransactionForm from './AddTransactionForm.js';\nimport ConfigInfoForm from './ConfigInfoForm.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessage: \"\",\n      isLoggedIn: false,\n      transactions: [],\n      config: {\n        clientId: this.loadFromConfigWithDefault('clientId', \"\"),\n        apiKey: this.loadFromConfigWithDefault('apiKey'),\n        sheetId: this.loadFromConfigWithDefault('sheetId'),\n      },\n    };\n  }\n\n  loadFromConfigWithDefault(key, defaultValue) {\n    const fromStorage = localStorage.getItem(key);\n    return fromStorage ? fromStorage : defaultValue;\n  }\n\n  render() {\n    const configSet = this.allConfigSet(this.state.config);\n    const isLoggedIn = this.state.isLoggedIn;\n    let button;\n\n    if (isLoggedIn) {\n      button = <LogoutButton onClick={this.handleLogoutClick} />;\n    } else {\n      button = <LoginButton onClick={this.handleLoginClick} />;\n    }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          { !configSet && <ConfigInfoForm onSubmit={this.handleConfigInfoSubmit} config={this.state.config} /> }\n\n          <button onClick={this.clearConfig}>Clear config</button>\n\n          { this.state.errorMessage && <label>Error: {this.state.errorMessage}</label> }\n          <Greeting isLoggedIn={isLoggedIn} />\n          {button}\n          <Transactions transactions={this.state.transactions} />\n\n          <button onClick={this.loadTransactions}>Load Transactions</button>\n\n          <AddTransactionForm />\n        </header>\n      </div>\n    );\n  }\n\n  componentDidMount(){\n    this.setupAPIClient(null);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.setupAPIClient(prevState.config);\n  }\n\n  setupAPIClient = (prevConfig) => {\n    if(!this.allConfigSet(this.state.config)) {\n      return;\n    }\n\n    if(!this.configChanged(prevConfig, this.state.config)) {\n      return;\n    }\n\n    window.gapi.load('client:auth2', this.initClient);\n  }\n\n  handleConfigInfoSubmit = (config) => {\n    localStorage.setItem('clientId', config.clientId);\n    localStorage.setItem('apiKey', config.apiKey);\n    localStorage.setItem('sheetId', config.sheetId);\n    this.setState({config: config});\n  }\n\n  clearConfig = () => {\n    localStorage.removeItem('clientId');\n    localStorage.removeItem('apiKey');\n    localStorage.removeItem('sheetId');\n    this.setState({\n      config: {\n        clientId: \"\",\n        apiKey: \"\",\n        sheetId: \"\",\n      },\n    });\n  }\n\n  allConfigSet = (config) => {\n    return config.clientId && config.apiKey && config.sheetId && config.clientId !== \"null\" && config.apiKey !== \"null\" && config.sheeetId !== \"null\" && config.clientId !== \"undefined\" && config.apiKey !== \"undefined\" && config.sheeetId !== \"undefined\";\n  }\n\n  configChanged = (prevConfig, currConfig) => {\n    if(!prevConfig && currConfig) {\n      return true\n    }\n    if(prevConfig && !currConfig) {\n      return true\n    }\n    return prevConfig.clientId !== currConfig.clientId\n      || prevConfig.apiKey !== currConfig.apiKey\n      || prevConfig.sheetId !== currConfig.sheetId;\n  }\n\n  handleLoginClick = () => {\n    window.gapi.auth2.getAuthInstance().signIn();\n    this.setState({isLoggedIn: true});\n  }\n\n  handleLogoutClick = () => {\n    window.gapi.auth2.getAuthInstance().signOut();\n    this.setState({isLoggedIn: false});\n  }\n\n  initClient = () => {\n    // Client ID and API key from the Developer Console\n    const config = this.state.config;\n\n    // Array of API discovery doc URLs for APIs used by the quickstart\n    var DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\n\n    // Authorization scopes required by the API; multiple scopes can be\n    // included, separated by spaces.\n    var SCOPES = \"https://www.googleapis.com/auth/spreadsheets\";\n\n    let currentComponent = this;\n\n    window.gapi.client.init({\n      apiKey: config.apiKey,\n      clientId: config.clientId,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function () {\n      // Listen for sign-in state changes.\n      window.gapi.auth2.getAuthInstance().isSignedIn.listen(currentComponent.updateSigninStatus);\n\n      // Handle the initial sign-in state.\n      currentComponent.updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    }, function(error) {\n      currentComponent.handleError(error);\n    });\n  }\n\n  handleError = (error) => {\n    console.log(error);\n    const errMsg = JSON.stringify(error, null, 2)\n    this.setState({\n      errorMessage: errMsg, \n    });\n  }\n\n  updateSigninStatus = (isSignedIn) => {\n    if (isSignedIn) {\n      this.setState({\n        isLoggedIn: true,\n      });\n    } else {\n      this.setState({\n        isLoggedIn: false,\n      });\n    }\n  }\n\n  loadTransactions = () => {\n    window.gapi.client.load(\"sheets\", \"v4\", () => {\n      window.gapi.client.sheets.spreadsheets.values.get({\n        spreadsheetId: this.state.config.sheetId,\n        range: 'Transactions',\n      })\n      .then(response => {\n        this.setState({transactions: this.transformResults(response)});\n      })\n      .catch(error => {\n        this.handleError(error);\n      });\n    });\n  }\n\n  transformResults = (response) => {\n    const values = response.result.values;\n    return values.slice(1, values.length).map((v) => {\n      return {\n        date: v[0],\n        amount: v[1],\n        category: v[2],\n        vendor: v[3],\n      };\n    });\n  }\n}\n\nfunction Transactions(props) {\n  const listItems = props.transactions.map((t) => \n    <li>{t.date.concat(t.amount, t.category, t.vendor)}</li>\n  );\n  \n  return (\n    <div>\n      <label>Transactions</label>\n      <ul>{listItems}</ul>\n    </div>\n  );\n}\n\nfunction LoginButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Login\n    </button>\n  );\n}\n\nfunction LogoutButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Logout\n    </button>\n  );\n}\n\nfunction UserGreeting(props) {\n  return <h1>Welcome back!</h1>;\n}\n\nfunction GuestGreeting(props) {\n  return <h1>Please sign in.</h1>;\n}\n\nfunction Greeting(props) {\n  const isLoggedIn = props.isLoggedIn;\n  if (isLoggedIn) {\n    return <UserGreeting />;\n  }\n  return <GuestGreeting />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}